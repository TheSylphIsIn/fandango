const DPAD_RIGHT=0x0010
const DPAD_LEFT=0x0020
const DPAD_UP=0x0040
const DPAD_DOWN=0x0080
const A_BUTTON=0x0001
const B_BUTTON=0x0002
const FLAG_AT_BOTTOM_OF_BENCH=FLAG_TEMP_F
const LOCALID_KEESIGHT = 10
const LOCALID_ESPERSHARD = 11
const LOCALID_UMBRASHARD = 12

mapscripts EltheCity_MapScripts 
{
	MAP_SCRIPT_ON_TRANSITION {
		if(flag(FLAG_SCALE_DESCENDING_DONE))
		{
			setobjectxyperm(LOCALID_UMBRASHARD, 11, 21)
		}
		if(flag(FLAG_SCALE_ASCENDING_DONE))
		{
			setobjectxyperm(LOCALID_ESPERSHARD, 13, 21)
		}
	}
}

script ObjEventVarTest
{
	setvar(VAR_OBJ_GFX_ID_0, OBJ_EVENT_GFX_BRENDAN_NORMAL)
	removeobject(VAR_LAST_TALKED)
	addobject(VAR_LAST_TALKED)
	waitbuttonpress
	setvar(VAR_OBJ_GFX_ID_0, OBJ_EVENT_GFX_MAY_NORMAL)
	removeobject(VAR_LAST_TALKED)
	addobject(VAR_LAST_TALKED)
	waitbuttonpress
	setvar(VAR_OBJ_GFX_ID_0, OBJ_EVENT_GFX_ANABEL)
	removeobject(VAR_LAST_TALKED)
	addobject(VAR_LAST_TALKED)
	waitbuttonpress
	setvar(VAR_OBJ_GFX_ID_0, OBJ_EVENT_GFX_SPECIES(ZOROARK))
	removeobject(VAR_LAST_TALKED)
	addobject(VAR_LAST_TALKED)
	waitbuttonpress
}

script Test_ScriptGetInput
{
	lock
	message("Which button will you press?")
	waitmessage
	while {
		waitforscriptinput
		switch(var(VAR_RESULT))
		{
			case DPAD_LEFT:
				applymovement(OBJ_EVENT_ID_PLAYER, StepLeft)
				waitmovement(0)
			case DPAD_RIGHT:
				applymovement(OBJ_EVENT_ID_PLAYER, StepRight)
				waitmovement(0)
			case DPAD_DOWN:
				applymovement(OBJ_EVENT_ID_PLAYER, StepDown)
				waitmovement(0)
			case DPAD_UP:
				applymovement(OBJ_EVENT_ID_PLAYER, StepUp)
				waitmovement(0)
		}
	}
	release
}

script EltheCity_Sign_InnLeft
{
	msgbox("Elysi Inn", MSGBOX_SIGN)
}

script EltheCity_Sign_InnRight
{
	speakername("Amelia", PORTRAIT_AMELIA_SERIOUSLY)
	msgbox("Phew, these room prices…I'm glad\n" "Pokémon Centers were free…\p" "Then again, not like I have any\n" "money anyway…", MSGBOX_SIGN)
}

movement StepDown
{
	walk_down
}

movement StepUp
{
	walk_up
}

movement StepLeft
{
	walk_left
}

movement StepRight
{
	walk_right
}

script EltheCity_Trigger_JumpOnBenchLeft_TopTile
{
	setvar(VAR_0x8004, ANIM_SIT_WEST)
	callnative(DoAmeliaOverworldAnim)
	playse(SE_BIKE_HOP)
	applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_JumpOnBenchLeft)
	waitmovement(0)
	addobjectspriteoffset(OBJ_EVENT_ID_PLAYER, 0, -6)
	do {
		waitforscriptinput
		switch(var(VAR_RESULT))
		{
			case DPAD_LEFT:
			case A_BUTTON:
			case B_BUTTON:
				resetobjectspriteoffset(OBJ_EVENT_ID_PLAYER)
				applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_GetOffBenchLeft)
				waitmovement(0)
//			case DPAD_DOWN:
//				if (!flag(FLAG_AT_BOTTOM_OF_BENCH))
//				{
//					applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_MoveDownBench)
//					waitmovement(0)
//					setflag(FLAG_AT_BOTTOM_OF_BENCH)
//				}
//			case DPAD_UP:
//				if (flag(FLAG_AT_BOTTOM_OF_BENCH))
//				{
//					applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_MoveUpBench)
//					waitmovement(0)
//					clearflag(FLAG_AT_BOTTOM_OF_BENCH)				
//				}
			
		}
	} while (var(VAR_RESULT) != DPAD_LEFT && var(VAR_RESULT) != A_BUTTON && var(VAR_RESULT) != B_BUTTON)
	release
}

script EltheCity_Trigger_JumpOnBenchLeft_BottomTile
{
	goto(EltheCity_Trigger_JumpOnBenchLeft_TopTile)
}

script EltheCity_Trigger_JumpOnBenchRight_TopTile
{
	setvar(VAR_0x8004, ANIM_SIT_EAST)
	callnative(DoAmeliaOverworldAnim)
	playse(SE_BIKE_HOP)
	applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_JumpOnBenchRight)
	waitmovement(0)
	addobjectspriteoffset(OBJ_EVENT_ID_PLAYER, 0, -6)
	do {
		waitforscriptinput
		switch(var(VAR_RESULT))
		{
			case DPAD_RIGHT:
			case A_BUTTON:
			case B_BUTTON:
				resetobjectspriteoffset(OBJ_EVENT_ID_PLAYER)
				applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_GetOffBenchRight)
				waitmovement(0)
//			case DPAD_DOWN:
//				if (!flag(FLAG_AT_BOTTOM_OF_BENCH))
//				{
//					applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_MoveDownBench)
//					waitmovement(0)
//					setflag(FLAG_AT_BOTTOM_OF_BENCH)
//				}
//			case DPAD_UP:
//				if (flag(FLAG_AT_BOTTOM_OF_BENCH))
//				{
//					applymovement(OBJ_EVENT_ID_PLAYER, EltheCity_Movement_MoveUpBench)
//					waitmovement(0)
//					clearflag(FLAG_AT_BOTTOM_OF_BENCH)				
//				}
			
		}
	} while (var(VAR_RESULT) != DPAD_RIGHT && var(VAR_RESULT) != A_BUTTON && var(VAR_RESULT) != B_BUTTON)
	release
}

script EltheCity_Trigger_JumpOnBenchRight_BottomTile
{
	goto(EltheCity_Trigger_JumpOnBenchRight_TopTile)
}

script EltheCity_EventScript_Keesight
{
	if (flag(FLAG_SCALE_ASCENDING_DONE) && flag(FLAG_SCALE_DESCENDING_DONE))
	{
		speakername("Keesight", PORTRAIT_KEESIGHT)
		msgbox("… … … … …\n" "Thanks for the song.", MSGBOX_NPC)
	}
	else
	{
		speakername("Batmon", PORTRAIT_KEESIGHT)
		msgbox("… … … … … … … … … …")
		speakername(NULL, 0)
		msgbox("The Pokémon is staring intently\n" "at the pond…", MSGBOX_AUTOCLOSE)
	}
}

script EltheCity_Trigger_MusicStump1
{
	playse(SE_NOTE_C)
	turnobject(LOCALID_KEESIGHT, DIR_WEST)
	
	// descending scale
	if(var(VAR_TEMP_2) == 7 && !flag(FLAG_SCALE_DESCENDING_DONE))
	{
		delay(60)
		applymovement(LOCALID_KEESIGHT, EltheCity_Movement_KeesightHops)
		playse(SE_BIKE_HOP)
		delay(16)
		playse(SE_BIKE_HOP)
		delay(32)
		playmoncry(SPECIES_WOOBAT, CRY_MODE_NORMAL)
		waitmoncry
		delay(30)
		applymovement(LOCALID_KEESIGHT, Common_Movement_FaceUp)
		waitmovement(0)
		delay(16)
		playse(SE_M_SUPERSONIC)
		applymovement(LOCALID_UMBRASHARD, EltheCity_Movement_MoveUmbrashard)
		waitmovement(0)
		applymovement(LOCALID_KEESIGHT, Common_Movement_FaceDown)
		waitmovement(0)
		setobjectxyperm(LOCALID_UMBRASHARD, 11, 21)
		setflag(FLAG_SCALE_DESCENDING_DONE)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
		setvar(VAR_TEMP_1, 1)
	}
	
	release
}

script EltheCity_Trigger_MusicStump2
{
	playse(SE_NOTE_D)
	turnobject(LOCALID_KEESIGHT, DIR_WEST)
	
	// ascending scale
	if(var(VAR_TEMP_1) == 1) 
	{
		addvar(VAR_TEMP_1, 1)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
	}
	
	// descending scale
	if(var(VAR_TEMP_2) == 6)
	{
		addvar(VAR_TEMP_2, 1)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
	}
	
	release
}

script EltheCity_Trigger_MusicStump3
{
	playse(SE_NOTE_E)
	turnobject(LOCALID_KEESIGHT, DIR_WEST)
	
	// ascending scale
	if(var(VAR_TEMP_1) == 2) 
	{
		addvar(VAR_TEMP_1, 1)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
	}
	
	// descending scale
	if(var(VAR_TEMP_2) == 5)
	{
		addvar(VAR_TEMP_2, 1)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
	}
	
	release
}

script EltheCity_Trigger_MusicStump4
{
	playse(SE_NOTE_F)
	turnobject(LOCALID_KEESIGHT, DIR_SOUTH)
	
	// ascending scale
	if(var(VAR_TEMP_1) == 3) 
	{
		addvar(VAR_TEMP_1, 1)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
	}
	
	// descending scale
	if(var(VAR_TEMP_2) == 4)
	{
		addvar(VAR_TEMP_2, 1)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
	}
	
	release
}

script EltheCity_Trigger_MusicStump5
{
	playse(SE_NOTE_G)
	turnobject(LOCALID_KEESIGHT, DIR_SOUTH)
	
	// ascending scale
	if(var(VAR_TEMP_1) == 4) 
	{
		addvar(VAR_TEMP_1, 1)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
	}
	
	// descending scale
	if(var(VAR_TEMP_2) == 3)
	{
		addvar(VAR_TEMP_2, 1)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
	}
	
	release
}

script EltheCity_Trigger_MusicStump6
{
	playse(SE_NOTE_A)
	turnobject(LOCALID_KEESIGHT, DIR_EAST)
	
	// ascending scale
	if(var(VAR_TEMP_1) == 5) 
	{
		addvar(VAR_TEMP_1, 1)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
	}
	
	// descending scale
	if(var(VAR_TEMP_2) == 2)
	{
		addvar(VAR_TEMP_2, 1)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
	}
	
	release
}

script EltheCity_Trigger_MusicStump7
{
	playse(SE_NOTE_B)
	turnobject(LOCALID_KEESIGHT, DIR_EAST)
	
	// ascending scale
	if(var(VAR_TEMP_1) == 6) 
	{
		addvar(VAR_TEMP_1, 1)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
	}
	
	// descending scale
	if(var(VAR_TEMP_2) == 1)
	{
		addvar(VAR_TEMP_2, 1)
	}
	else
	{
		setvar(VAR_TEMP_2, 0)
	}
	
	release
}

script EltheCity_Trigger_MusicStump8
{
	playse(SE_NOTE_C_HIGH)
	turnobject(LOCALID_KEESIGHT, DIR_EAST)
	
	
	// ascending scale
	if(var(VAR_TEMP_1) == 7 && !flag(FLAG_SCALE_ASCENDING_DONE)) 
	{
		delay(60)
		applymovement(LOCALID_KEESIGHT, EltheCity_Movement_KeesightHops)
		playse(SE_BIKE_HOP)
		delay(16)
		playse(SE_BIKE_HOP)
		delay(32)
		playmoncry(SPECIES_WOOBAT, CRY_MODE_NORMAL)
		waitmoncry
		delay(30)
		applymovement(LOCALID_KEESIGHT, Common_Movement_FaceUp)
		waitmovement(0)
		delay(16)
		playse(SE_M_SUPERSONIC)
		applymovement(LOCALID_ESPERSHARD, EltheCity_Movement_MoveEspershard)
		waitmovement(0)
		applymovement(LOCALID_KEESIGHT, Common_Movement_FaceDown)
		waitmovement(0)
		setobjectxyperm(LOCALID_ESPERSHARD, 13, 21)
		setflag(FLAG_SCALE_ASCENDING_DONE)
	}
	else
	{
		setvar(VAR_TEMP_1, 0)
		setvar(VAR_TEMP_2, 1) // can't instantly start the next scale after the cutscene from finishing the previous
	}
	
	release
}

movement EltheCity_Movement_KeesightHops
{
	jump_in_place_down * 2
}

movement EltheCity_Movement_MoveUmbrashard
{
	levitate
	delay_16
	walk_up * 3
	walk_right * 8
	walk_up
	delay_16
	stop_levitate
}

movement EltheCity_Movement_MoveEspershard
{
	levitate
	delay_16
	walk_left * 8
	walk_up
	delay_16
	stop_levitate
}

movement EltheCity_Movement_JumpOnBenchLeft
{
	lock_anim
	jump_in_place_left
}

movement EltheCity_Movement_GetOffBenchLeft
{
	unlock_anim
	walk_slow_left	
}

movement EltheCity_Movement_JumpOnBenchRight
{
	lock_anim
	jump_in_place_right
}

movement EltheCity_Movement_GetOffBenchRight
{
	unlock_anim
	walk_slow_right
}

movement EltheCity_Movement_MoveDownBench
{
	walk_slow_down
}

movement EltheCity_Movement_MoveUpBench
{
	walk_slow_up
}